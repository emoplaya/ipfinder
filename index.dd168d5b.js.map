{"mappings":"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","sources":["<anon>","src/index.js","src/helpers/index.js","src/helpers/validate-ip.js","src/helpers/get-address.js","src/helpers/add-offset.js","node_modules/ymaps/dist/ymaps.esm.js"],"sourcesContent":["function $441f8fd867bb4365$export$f68b151ee3d7802a(ip) {\n    if (/^(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) return true;\n    alert(\"You have to enter a valid IP address\");\n    return false;\n}\n\n\nasync function $4c4c090434502e25$export$88411125f012957a(ip = \"8.8.8.8\") {\n    const response = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=at_Qz7BuZQV8a25lmxXYm9OkMJT5KIIm&ipAddress=${ip}`);\n    return await response.json();\n}\n\n\n\n\n\n\nvar $0bc6e08b66f22916$var$ymaps$1 = {\n    load: function load() {\n        var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"//api-maps.yandex.ru/2.1/?lang=en_RU\";\n        var getNsParamValue = function getNsParamValue() {\n            var results = src.match(/[\\\\?&]ns=([^&#]*)/);\n            return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n        };\n        if (!this.promise) this.promise = new Promise(function(resolve, reject) {\n            var scriptElement = document.createElement(\"script\");\n            scriptElement.onload = resolve;\n            scriptElement.onerror = reject;\n            scriptElement.type = \"text/javascript\";\n            scriptElement.src = src;\n            document.body.appendChild(scriptElement);\n        }).then(function() {\n            var ns = getNsParamValue();\n            if (ns && ns !== \"ymaps\") (0, eval)(\"var ymaps = \".concat(ns, \";\"));\n            return new Promise(function(resolve) {\n                return ymaps.ready(resolve);\n            });\n        });\n        return this.promise;\n    }\n};\nvar $0bc6e08b66f22916$export$2e2bcd8739ae039 = $0bc6e08b66f22916$var$ymaps$1;\n\n\nconst $35da740d59af89ba$var$ipInput = document.querySelector(\".search-bar__input\");\nconst $35da740d59af89ba$var$btn = document.querySelector(\"button\");\nconst $35da740d59af89ba$var$ipInfo = document.querySelector(\"#ip\");\nconst $35da740d59af89ba$var$locationInfo = document.querySelector(\"#location\");\nconst $35da740d59af89ba$var$timezoneInfo = document.querySelector(\"#timezone\");\nconst $35da740d59af89ba$var$ispInfo = document.querySelector(\"#isp\");\n$35da740d59af89ba$var$btn.addEventListener(\"click\", $35da740d59af89ba$var$getData);\n$35da740d59af89ba$var$ipInput.addEventListener(\"keydown\", $35da740d59af89ba$var$handleKey);\nconst $35da740d59af89ba$var$mapArea = document.querySelector(\".map\");\nlet $35da740d59af89ba$var$map;\nlet $35da740d59af89ba$var$marker;\n(0, $0bc6e08b66f22916$export$2e2bcd8739ae039).load().then((maps)=>{\n    $35da740d59af89ba$var$map = new maps.Map($35da740d59af89ba$var$mapArea, {\n        center: [\n            51.505,\n            -0.09\n        ],\n        zoom: 10,\n        controls: []\n    });\n    // Создание маркера\n    $35da740d59af89ba$var$marker = new maps.Placemark([\n        51.505,\n        -0.09\n    ]);\n    // Добавление маркера на карту\n    $35da740d59af89ba$var$map.geoObjects.add($35da740d59af89ba$var$marker);\n}).catch((error)=>console.log(\"Failed to load Yandex Maps\", error));\nfunction $35da740d59af89ba$var$getData() {\n    if ((0, $441f8fd867bb4365$export$f68b151ee3d7802a)($35da740d59af89ba$var$ipInput.value)) (0, $4c4c090434502e25$export$88411125f012957a)($35da740d59af89ba$var$ipInput.value).then($35da740d59af89ba$var$setInfo);\n}\nfunction $35da740d59af89ba$var$handleKey(e) {\n    if (e.key === \"Enter\") $35da740d59af89ba$var$getData();\n}\nfunction $35da740d59af89ba$var$setInfo(mapData) {\n    const { lat: lat, lng: lng, country: country, region: region, timezone: timezone } = mapData.location;\n    $35da740d59af89ba$var$ipInfo.innerText = mapData.ip;\n    $35da740d59af89ba$var$locationInfo.innerText = country + \" \" + region;\n    $35da740d59af89ba$var$timezoneInfo.innerText = timezone;\n    $35da740d59af89ba$var$ispInfo.innerText = mapData.isp;\n    if ($35da740d59af89ba$var$map && $35da740d59af89ba$var$marker) {\n        $35da740d59af89ba$var$map.setCenter([\n            lat,\n            lng\n        ], 10);\n        $35da740d59af89ba$var$marker.geometry.setCoordinates([\n            lat,\n            lng\n        ]);\n        // Обновляем данные маркера\n        $35da740d59af89ba$var$marker.properties.set({\n            hintContent: `${country}, ${region}`,\n            balloonContent: `IP: ${mapData.ip}<br>ISP: ${mapData.isp}`\n        });\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    (0, $4c4c090434502e25$export$88411125f012957a)(\"102.22.22.1\").then($35da740d59af89ba$var$setInfo);\n});\n\n\n//# sourceMappingURL=index.dd168d5b.js.map\n","import { validateIp, getAddress, addOffset } from \"./helpers\";\r\nimport ymaps from \"ymaps\";\r\n\r\nconst ipInput = document.querySelector(\".search-bar__input\");\r\nconst btn = document.querySelector(\"button\");\r\n\r\nconst ipInfo = document.querySelector(\"#ip\");\r\nconst locationInfo = document.querySelector(\"#location\");\r\nconst timezoneInfo = document.querySelector(\"#timezone\");\r\nconst ispInfo = document.querySelector(\"#isp\");\r\n\r\nbtn.addEventListener(\"click\", getData);\r\nipInput.addEventListener(\"keydown\", handleKey);\r\n\r\nconst mapArea = document.querySelector(\".map\");\r\n\r\nlet map;\r\nlet marker;\r\n\r\nymaps\r\n  .load()\r\n  .then((maps) => {\r\n    map = new maps.Map(mapArea, {\r\n      center: [51.505, -0.09],\r\n      zoom: 10,\r\n      controls: [],\r\n    });\r\n\r\n    // Создание маркера\r\n    marker = new maps.Placemark([51.505, -0.09]);\r\n\r\n    // Добавление маркера на карту\r\n    map.geoObjects.add(marker);\r\n  })\r\n  .catch((error) => console.log(\"Failed to load Yandex Maps\", error));\r\n\r\nfunction getData() {\r\n  if (validateIp(ipInput.value)) {\r\n    getAddress(ipInput.value).then(setInfo);\r\n  }\r\n}\r\n\r\nfunction handleKey(e) {\r\n  if (e.key === \"Enter\") {\r\n    getData();\r\n  }\r\n}\r\n\r\nfunction setInfo(mapData) {\r\n  const { lat, lng, country, region, timezone } = mapData.location;\r\n  ipInfo.innerText = mapData.ip;\r\n  locationInfo.innerText = country + \" \" + region;\r\n  timezoneInfo.innerText = timezone;\r\n  ispInfo.innerText = mapData.isp;\r\n\r\n  if (map && marker) {\r\n    map.setCenter([lat, lng], 10);\r\n    marker.geometry.setCoordinates([lat, lng]);\r\n\r\n    // Обновляем данные маркера\r\n    marker.properties.set({\r\n      hintContent: `${country}, ${region}`,\r\n      balloonContent: `IP: ${mapData.ip}<br>ISP: ${mapData.isp}`,\r\n    });\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  getAddress(\"102.22.22.1\").then(setInfo);\r\n});\r\n","export { validateIp } from \"./validate-ip\";\r\nexport { getAddress } from \"./get-address\";\r\nexport { addOffset } from \"./add-offset\";\r\n","export function validateIp(ip) {\r\n  if (\r\n    /^(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n      ip\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  alert(\"You have to enter a valid IP address\");\r\n  return false;\r\n}\r\n","export async function getAddress(ip = \"8.8.8.8\") {\r\n  const response = await fetch(\r\n    `https://geo.ipify.org/api/v2/country,city?apiKey=at_Qz7BuZQV8a25lmxXYm9OkMJT5KIIm&ipAddress=${ip}`\r\n  );\r\n  return await response.json();\r\n}\r\n","","var ymaps$1 = {\n  load: function load() {\n    var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '//api-maps.yandex.ru/2.1/?lang=en_RU';\n\n    var getNsParamValue = function getNsParamValue() {\n      var results = src.match(/[\\\\?&]ns=([^&#]*)/);\n      return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    };\n\n    if (!this.promise) {\n      this.promise = new Promise(function (resolve, reject) {\n        var scriptElement = document.createElement('script');\n        scriptElement.onload = resolve;\n        scriptElement.onerror = reject;\n        scriptElement.type = 'text/javascript';\n        scriptElement.src = src;\n        document.body.appendChild(scriptElement);\n      }).then(function () {\n        var ns = getNsParamValue();\n\n        if (ns && ns !== 'ymaps') {\n          (0, eval)(\"var ymaps = \".concat(ns, \";\"));\n        }\n\n        return new Promise(function (resolve) {\n          return ymaps.ready(resolve);\n        });\n      });\n    }\n\n    return this.promise;\n  }\n};\n\nexport default ymaps$1;\n"],"names":["$35da740d59af89ba$var$map","$35da740d59af89ba$var$marker","$4c4c090434502e25$export$88411125f012957a","ip","response","fetch","json","$35da740d59af89ba$var$ipInput","document","querySelector","$35da740d59af89ba$var$btn","$35da740d59af89ba$var$ipInfo","$35da740d59af89ba$var$locationInfo","$35da740d59af89ba$var$timezoneInfo","$35da740d59af89ba$var$ispInfo","addEventListener","$35da740d59af89ba$var$getData","e","key","$35da740d59af89ba$var$mapArea","value","test","alert","then","$35da740d59af89ba$var$setInfo","mapData","lat","lng","country","region","timezone","location","innerText","isp","setCenter","geometry","setCoordinates","properties","set","hintContent","balloonContent","load","src","arguments","length","undefined","getNsParamValue","results","match","decodeURIComponent","replace","promise","Promise","resolve","reject","scriptElement","createElement","onload","onerror","type","body","appendChild","ns","eval","concat","ymaps","ready","maps","Map","center","zoom","controls","Placemark","geoObjects","add","catch","error","console","log"],"version":3,"file":"index.dd168d5b.js.map"}